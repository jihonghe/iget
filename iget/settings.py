"""
Django settings for iget project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# 设置python搜寻环境变量，目的是将各个app集中在一个包中管理
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))

# 自定义User模型：继承AbstractUser
AUTH_USER_MODEL = 'users.User'
# 自定义用户验证
AUTHENTICATION_BACKENDS = (
    'users.views.CustomBackend',
)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '9_#foq@_k$2%d8n07uvo(l^=_*adoya(z8-e=f!j4%!dnksg_j'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'djcelery',
    'users',
    'operations',
    'products',
    'goods',
    'dataStatistics',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 用户页面请求中间件
    'myMiddleware.users.userMiddleware.pageAccessMD',
]

ROOT_URLCONF = 'iget.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 媒体文件处理
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'iget.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'iget',
        'USER': 'root',
        'PASSWORD': 'root',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

# Mysql存储的时间不能灵活设置时区，不像datetime对象有一项参数专门指定时区，所以为了统一全球的时间，必须使用国际标准时间UTC，否则就会乱套
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

MEDIA_URL = '/static/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')


# 邮件发送设置
# 设置EMAIL_BACKEND确保使用的是smtp
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# 安全机制设置为SSL加密机制, 注意：SSL与TLS互斥, 不能同时设置为True
EMAIL_USE_TLS = False  # 不使用TLS安全传输协议, 默认为False, 写出来是为了清楚
EMAIL_USE_SSL = True   # 使用SSL加密
EMAIL_HOST = 'smtp.163.com'  # 发送邮件使用的smtp服务器
EMAIL_PORT = 465        # 发件箱的smtp服务器且使用SSL加密的对应端口号：465或587
EMAIL_HOST_USER = 'eget_admin@163.com'  # 发送邮件的邮箱地址
# 邮箱第三方登录用的授权码, 在对应的邮箱中进行设置开启
EMAIL_HOST_PASSWORD = 'hjh2015190304'  # EMAIL_HOST_USER的第三方登录授权码, 并非邮箱登录密码, 需要在邮箱中进行设置
EMAIL_FROM = 'eget_admin@163.com'  # 发件人邮箱

#celery config
from .celeryconfig import *
#消息中间件（使用redis），消息代理，用于发布者传递消息给消费者
BROKER_BACKEND = 'redis'
BROKER_URL = 'redis://127.0.0.1:6379/1'
#消息结果返回中间件（使用redis），用于存储任务执行结果
CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/2'

# LOGGING_0 = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'simple': {
#             'format': '[%(asctime)s] %(message)s'
#         },
#     },
#     'handlers': {
#         'console': {
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#             'formatter': 'simple'
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console'],
#             'level': 'DEBUG',
#         },
#     },
# }
# LOGGING_1 = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'file': {
#             'level': 'DEBUG',
#             'class': 'logging.FileHandler',
#             'filename': BASE_DIR + '/static/other/debug.log',
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['file'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#     },
# }
# LOGGING = LOGGING_1
